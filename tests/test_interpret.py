from typing import Any, Dict

from pytest import mark

from ansiscape.enums import (
    Blink,
    Calligraphy,
    Font,
    Frame,
    Ideogram,
    StandardColor,
    Underline,
    Weight,
)
from ansiscape.interpret import interpret_as_any


@mark.parametrize(
    "code, expect",
    [
        (
            "0",
            {
                "blink": Blink.NONE,
                "calligraphy": Calligraphy.NONE,
                "foreground": False,
                "background": False,
                "conceal": False,
                "font": Font.DEFAULT,
                "underline": Underline.NONE,
                "weight": Weight.NORMAL,
                "strike": False,
                "invert": False,
                "proportional_spacing": False,
                "frame": Frame.NONE,
                "overline": False,
                "ideogram": Ideogram.NONE,
            },
        ),
        ("1", {"weight": Weight.HEAVY}),
        ("2", {"weight": Weight.LIGHT}),
        ("3", {"calligraphy": Calligraphy.ITALIC}),
        ("4", {"underline": Underline.SINGLE}),
        ("5", {"blink": Blink.SLOW}),
        ("6", {"blink": Blink.FAST}),
        ("7", {"invert": True}),
        ("8", {"conceal": True}),
        ("9", {"strike": True}),
        ("10", {"font": Font.DEFAULT}),
        ("11", {"font": Font.ALT_0}),
        ("12", {"font": Font.ALT_1}),
        ("13", {"font": Font.ALT_2}),
        ("14", {"font": Font.ALT_3}),
        ("15", {"font": Font.ALT_4}),
        ("16", {"font": Font.ALT_5}),
        ("17", {"font": Font.ALT_6}),
        ("18", {"font": Font.ALT_7}),
        ("19", {"font": Font.ALT_8}),
        ("20", {"calligraphy": Calligraphy.BLACKLETTER}),
        ("21", {"underline": Underline.DOUBLE}),
        ("22", {"weight": Weight.NORMAL}),
        ("23", {"calligraphy": Calligraphy.NONE}),
        ("24", {"underline": Underline.NONE}),
        ("25", {"blink": Blink.NONE}),
        ("26", {"proportional_spacing": True}),
        ("27", {"invert": False}),
        ("28", {"conceal": False}),
        ("29", {"strike": False}),
        ("30", {"foreground": StandardColor.BLACK}),
        ("31", {"foreground": StandardColor.RED}),
        ("32", {"foreground": StandardColor.GREEN}),
        ("33", {"foreground": StandardColor.YELLOW}),
        ("34", {"foreground": StandardColor.BLUE}),
        ("35", {"foreground": StandardColor.MAGENTA}),
        ("36", {"foreground": StandardColor.CYAN}),
        ("37", {"foreground": StandardColor.WHITE}),
        ("38;2;0;0;0", {"foreground": (0.0, 0.0, 0.0, 1.0)}),
        ("39", {"foreground": False}),
        ("40", {"background": StandardColor.BLACK}),
        ("41", {"background": StandardColor.RED}),
        ("42", {"background": StandardColor.GREEN}),
        ("43", {"background": StandardColor.YELLOW}),
        ("44", {"background": StandardColor.BLUE}),
        ("45", {"background": StandardColor.MAGENTA}),
        ("46", {"background": StandardColor.CYAN}),
        ("47", {"background": StandardColor.WHITE}),
        ("48;2;0;0;0", {"background": (0.0, 0.0, 0.0, 1.0)}),
        ("49", {"background": False}),
        ("50", {"proportional_spacing": False}),
        ("51", {"frame": Frame.BOX}),
        ("52", {"frame": Frame.CIRCLE}),
        ("53", {"overline": True}),
        ("54", {"frame": Frame.NONE}),
        ("55", {"overline": False}),
        ("60", {"ideogram": Ideogram.SINGLE_LINE_UNDER_OR_RIGHT}),
        ("61", {"ideogram": Ideogram.DOUBLE_LINE_UNDER_OR_RIGHT}),
        ("62", {"ideogram": Ideogram.SINGLE_LINE_OVER_OR_LEFT}),
        ("63", {"ideogram": Ideogram.DOUBLE_LINE_OVER_OR_LEFT}),
        ("64", {"ideogram": Ideogram.STRESS}),
        ("65", {"ideogram": Ideogram.NONE}),
        ("1;2", {"weight": Weight.LIGHT}),
        ("1;3", {"calligraphy": Calligraphy.ITALIC, "weight": Weight.HEAVY}),
    ],
)
def test_interpret_as_any(code: str, expect: Dict[str, Any]) -> None:
    assert interpret_as_any(code) == expect
